#!/usr/bin/env python
"""
shortScaffold_noStartStop
6 June 2014

dent earl, dearl a soe ucsc edu

a filter for the msca project analysis pipeline.
scans Trascripts and PSLs for alignments labeled noStart or noStop
and then looks for problems with those transcripts.
"""
import sys
import lib_filter


def main():
  args = lib_filter.boilerplateArguments()
  alignments = lib_filter.getAlignments(args.alignment)
  alignments_dict = {}
  for a in alignments:
    alignments_dict.setdefault(a.hashkey(), [])
    alignments_dict[a.hashkey()].append(a)
  transcripts = lib_filter.getTranscripts(
    args.geneCheckBed, args.geneCheckBedDetails)
  for t in transcripts:
    for annot in t.annotations:
      if 'noStart' not in annot.labels and 'noStop' not in annot.labels:
        continue
      a_name = t.hashkey(deuniquify=True)
      if a_name not in alignments_dict:
        continue
      for a in alignments_dict[a_name]:
        if len(a.strand) > 1:
          # this code assumes the target is always positive strand.
          # for this project I believe this is true.
          assert a.strand[1] == '+'
        #####
        # If the query does not completely map to the target, mark it.
        if a.qSize != a.qEnd - a.qStart:
          annot.addLabel('alignmentPartialMap')
        #####
        # If the alignment starts or ends right on top of a transcript, mark it.
        if a.strand.startswith('+'):
          if 'noStart' in annot.labels and a.tStart == 0 and a.qStart != 0:
            # aligned: #  unaligned: -  whatever: .  edge: |
            # query  |---#####....
            # target    |#####....
            annot.addLabel('alignmentAbutsEdge')
          if 'noStop' in annot.labels and a.tEnd == a.tSize and a.qEnd != a.qSize:
            # query  ...######---|
            # target ...######|
            annot.addLabel('alignmentAbutsEdge')
        else:
          assert(a.strand.startswith('-'))
          if 'noStop' in annot.labels and a.tStart == 0 and a.qStart != 0:
            annot.addLabel('alignmentAbutsEdge')
          if ('noStart' in annot.labels and a.tEnd == a.tSize and
              a.qEnd != a.qSize):
            annot.addLabel('alignmentAbutsEdge')
  lib_filter.writeAllBeds(transcripts, args)


if __name__ == '__main__':
  main()
