#!/usr/bin/env python
"""
uniquify
7 July 2014

dent earl, dearl a soe ucsc edu

a filter for the msca project analysis pipeline.
Reads through the input and tries to make unique the
transcripts, where possible.
"""
import sys
import lib_filter


def main():
  args = lib_filter.boilerplateArguments()
  transcripts = lib_filter.getTranscripts(
    args.geneCheckBed, args.geneCheckBedDetails)
  names = {}
  for t in transcripts:
    if t.name not in names:
      # store the first instance and the count
      names[t.name] = [t, 0]
    else:
      # transcript has multiples, rename the first instance
      if not names[t.name][0].name.endswith('-0'):
        names[t.name][0].name += '-0'
        # rename the annotations
        for a in names[t.name][0].annotations:
          a.name += '-0'
      names[t.name][1] += 1
      # rename this instance according to the current count
      prev_name = t.name
      t.name = '%s-%d' % (t.name, names[t.name][1])
      # rename the annotations
      for a in t.annotations:
        a.name = '%s-%d' % (a.name, names[prev_name][1])

  lib_filter.writeAllBeds(transcripts, args)


if __name__ == '__main__':
  main()
