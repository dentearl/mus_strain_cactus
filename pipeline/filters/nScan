#!/usr/bin/env python
"""
nScan
6 June 2014

dent earl, dearl a soe ucsc edu

a filter for the msca project analysis pipeline.
scans Trascripts for bad transcripts that contain Ns.
"""
from argparse import ArgumentParser
import sys
import lib_filter


def main():
  parser = ArgumentParser()
  lib_filter.initializeArguments(parser)
  args = parser.parse_args()
  lib_filter.checkArguments(args, parser)
  seq_dict = lib_filter.getSequences(args.sequence)
  map(lambda key: seq_dict[key].setUpper(), seq_dict)
  chrom_dict = lib_filter.getChromSizes(args.chromSizes)
  bed_file = open(args.geneCheckBed, 'r')
  bed_details_file = open(args.geneCheckBedDetails, 'r')
  transcripts = []
  for t in lib_filter.transcriptIterator(bed_file, bed_details_file):
    transcripts.append(t)
    for annot in t.annotations:
      chrom = annot.chromosomeInterval.chromosome
      start = annot.chromosomeInterval.start
      stop = annot.chromosomeInterval.stop
      seq = lib_filter.sliceSequence(seq_dict[chrom].getSequence(), start, stop)
      if 'N' in seq:
        annot.labels.append('containsNs')
        continue
  out_bed, out_bed_details = lib_filter.getBedOutFiles(args)
  lib_filter.writeDetailsBedFile(transcripts, out_bed, out_bed_details)


if __name__ == '__main__':
  main()
